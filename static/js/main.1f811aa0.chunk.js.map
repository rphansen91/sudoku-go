{"version":3,"sources":["providers/sudoku/initial.tsx","providers/sudoku/context.tsx","components/Controls/NubmerControl.tsx","components/Controls/NumberControls.tsx","utils/wasm.ts","providers/sudoku/wasm.tsx","components/Controls/SudokuHeader.tsx","providers/sudoku/keyboard.ts","components/Controls/Sudoku.tsx","components/Root/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["initialBoard","SudokuContext","createContext","initial","board","active","setInitialBoard","console","warn","setBoard","setActive","setValue","refresh","useSudokuGame","useContext","SudokuGame","children","useState","setActivePosition","useCallback","rowCol","value","newBoard","forEach","row","push","col","useMemo","Provider","SudokuNumBorder","Box","py","flexGrow","display","justifyContent","borderTop","borderLeft","SudokuFab","props","large","useMediaQuery","Fab","style","overflow","borderRadius","height","width","lineHeight","verticalAlign","textAlign","minHeight","SudokuValueInput","position","activeRow","activeCol","onClick","onFocus","disableFocusRipple","color","undefined","InputBase","autoFocus","onChange","ev","nextValue","Number","target","slice","isNaN","type","classes","input","Typography","NumberControls","onNumberPress","alignItems","p","tabIndex","variant","wasmBrowserInstantiate","wasmModuleUrl","importObject","a","WebAssembly","instantiateStreaming","fetch","then","response","arrayBuffer","wasmArrayBuffer","instantiate","SudokuWasmControls","useEffect","createBoard","create","init","window","go","Go","process","wasm","run","instance","boardStr","JSON","parse","solveBoard","visualizeBoard","fn","str","SudokuHeader","confirmRefresh","setConfirmRefresh","useSudokuWasmSolve","playing","setPlaying","paused","setPaused","visualizationMoves","useRef","visualizationPaused","visualizationStopped","onVisualize","visualizeLoop","move","moves","shift","current","length","requestAnimationFrame","onPause","onStop","useSudokuWasmVisualize","onCancelRefresh","px","Tooltip","title","IconButton","size","Dialog","open","onClose","DialogContent","DialogContentText","DialogActions","Button","keys","SudokuKeyBoardControls","handleKeyDown","handleKeyUp","recurse","getNext","curr","next","key","which","addEventListener","removeEventListener","SudokuBoard","map","rowValues","disabled","theme","createMuiTheme","palette","primary","main","secondary","Root","CssBaseline","Container","maxWidth","Card","Divider","CardContent","border","Sudoku","Boolean","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1f811aa0.chunk.js","sourcesContent":["export const initialBoard = [\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n];\n","import React, { FC, useCallback, useEffect, useMemo, useState, createContext, useContext } from \"react\";\nimport { IMaybe, IBoard, IRowCol, ISetActive, ISetValue, ISudokuContext } from './types'\nimport { initialBoard as initial } from \"./initial\";\n\nexport const SudokuContext = createContext<ISudokuContext>({\n  initialBoard: initial,\n  board: initial,\n  active: null,\n  setInitialBoard: () => console.warn(\"SudokuGame Provider Not Found\"),\n  setBoard: () => console.warn(\"SudokuGame Provider Not Found\"),\n  setActive: () => console.warn(\"SudokuGame Provider Not Found\"),\n  setValue: () => console.warn(\"SudokuGame Provider Not Found\"),\n  refresh: () => console.warn(\"SudokuGame Provider Not Found\"),\n});\n\nexport const useSudokuGame = () => useContext(SudokuContext);\n\nexport const SudokuGame: FC = ({\n    children,\n  }) => {\n\n    const [initialBoard, setInitialBoard] = useState<IMaybe<IBoard>>(initial);\n    \n    const [board, setBoard] = useState<IMaybe<IBoard>>(initial);\n  \n    const [active, setActivePosition] = useState<IMaybe<IRowCol>>(\n      null\n    );\n  \n    const setActive: ISetActive = useCallback((rowCol) => {\n      setActivePosition(rowCol);\n    }, []);\n  \n    const setValue: ISetValue = useCallback(\n      (rowCol, value) => {\n        if (board && rowCol) {\n          const newBoard: number[][] = [];\n          board.forEach((row) => {\n            newBoard.push([...row]);\n          });\n          newBoard[rowCol.row][rowCol.col] = value;\n          setBoard(newBoard);\n        }\n      },\n      [board]\n    );\n  \n    const refresh = useCallback(() => {\n      setBoard(initialBoard);\n    }, [initialBoard]);\n  \n    const value = useMemo(\n      () => ({\n        initialBoard,\n        board,\n        active,\n        setBoard, \n        setInitialBoard,\n        setActive,\n        setValue,\n        refresh,\n      }),\n      [initialBoard, board, active, setActive, setValue, setBoard, setInitialBoard, refresh]\n    );\n  \n    return (\n      <SudokuContext.Provider value={value}>{children}</SudokuContext.Provider>\n    );\n  };\n  ","import Box from \"@material-ui/core/Box\";\nimport Fab, { FabProps } from \"@material-ui/core/Fab\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { IRowCol, ISetActive, ISetValue } from \"../../providers/sudoku/types\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport React, { FC } from \"react\";\n\nexport const SudokuNumBorder: FC<IRowCol> = ({ children, row, col }) => {\n  return (\n    <Box\n      py={1}\n      flexGrow={1}\n      display=\"flex\"\n      justifyContent=\"center\"\n      borderTop={!row || row % 3 ? 0 : 1}\n      borderLeft={!col || col % 3 ? 0 : 1}\n    >\n      {children}\n    </Box>\n  );\n};\n\nexport const SudokuFab: FC<FabProps> = ({ children, ...props }) => {\n  const large = useMediaQuery(\"(min-width:727px)\");\n  return (\n    <Fab\n      style={\n        large\n          ? {\n              overflow: \"hidden\",\n              borderRadius: 4,\n            }\n          : {\n              overflow: \"hidden\",\n              borderRadius: 4,\n              height: 24,\n              width: 24,\n              lineHeight: \"24px\",\n              verticalAlign: \"middle\",\n              textAlign: \"center\",\n              minHeight: \"initial\",\n            }\n      }\n      {...props}\n    >\n      {children}\n    </Fab>\n  );\n};\n\nexport const SudokuValueInput: FC<{\n  value: number;\n  active?: IRowCol | null;\n  position?: IRowCol | null;\n  setActive?: ISetActive;\n  setValue?: ISetValue;\n}> = ({ value, setValue, active, position, setActive }) => {\n  const activeRow = (active?.row ?? -1) === position?.row;\n  const activeCol = (active?.col ?? -1) === position?.col;\n  const onChange = (ev: any) => {\n    const nextValue = Number(ev.target.value.slice(-1));\n    if (!isNaN(nextValue)) {\n      setValue?.(position, nextValue);\n    }\n  };\n\n  return (\n    <SudokuFab\n      onClick={() => setActive?.(position)}\n      onFocus={() => setActive?.(position)}\n      disableFocusRipple\n      color={\n        activeRow && activeCol\n          ? \"primary\"\n          : activeRow\n          ? \"secondary\"\n          : activeCol\n          ? \"secondary\"\n          : undefined\n      }\n    >\n      {activeRow && activeCol ? (\n        <InputBase\n          autoFocus\n          value={value || \"\"}\n          style={{ color: \"inherit\" }}\n          onChange={onChange}\n          type=\"tel\"\n          classes={{\n            input: \"text-center\",\n          }}\n        />\n      ) : (\n        <Typography>\n          <b>{value || \"\"}</b>\n        </Typography>\n      )}\n    </SudokuFab>\n  );\n};\n","import { Typography } from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport React from \"react\";\nimport { useSudokuGame } from \"../../providers/sudoku/context\";\nimport { SudokuFab } from \"./NubmerControl\";\n\nexport const NumberControls = () => {\n  const { setValue, active } = useSudokuGame();\n  const onNumberPress = (value: number) => {\n    setValue(active, value);\n  };\n  return (\n    <Box\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      width=\"100%\"\n      p={1}\n    >\n      <Box py={1} flexGrow={1}>\n        <SudokuFab onClick={() => onNumberPress(1)} tabIndex={-1}>\n          <Typography variant=\"h6\">1</Typography>\n        </SudokuFab>\n      </Box>\n      <Box py={1} flexGrow={1}>\n        <SudokuFab onClick={() => onNumberPress(2)} tabIndex={-1}>\n          <Typography variant=\"h6\">2</Typography>\n        </SudokuFab>\n      </Box>\n      <Box py={1} flexGrow={1}>\n        <SudokuFab onClick={() => onNumberPress(3)} tabIndex={-1}>\n          <Typography variant=\"h6\">3</Typography>\n        </SudokuFab>\n      </Box>\n      <Box py={1} flexGrow={1}>\n        <SudokuFab onClick={() => onNumberPress(4)} tabIndex={-1}>\n          <Typography variant=\"h6\">4</Typography>\n        </SudokuFab>\n      </Box>\n      <Box py={1} flexGrow={1}>\n        <SudokuFab onClick={() => onNumberPress(5)} tabIndex={-1}>\n          <Typography variant=\"h6\">5</Typography>\n        </SudokuFab>\n      </Box>\n      <Box py={1} flexGrow={1}>\n        <SudokuFab onClick={() => onNumberPress(6)} tabIndex={-1}>\n          <Typography variant=\"h6\">6</Typography>\n        </SudokuFab>\n      </Box>\n      <Box py={1} flexGrow={1}>\n        <SudokuFab onClick={() => onNumberPress(7)} tabIndex={-1}>\n          <Typography variant=\"h6\">7</Typography>\n        </SudokuFab>\n      </Box>\n      <Box py={1} flexGrow={1}>\n        <SudokuFab onClick={() => onNumberPress(8)} tabIndex={-1}>\n          <Typography variant=\"h6\">8</Typography>\n        </SudokuFab>\n      </Box>\n      <Box py={1} flexGrow={1}>\n        <SudokuFab onClick={() => onNumberPress(9)} tabIndex={-1}>\n          <Typography variant=\"h6\">9</Typography>\n        </SudokuFab>\n      </Box>\n    </Box>\n  );\n};\n","export const wasmBrowserInstantiate = async (\n  wasmModuleUrl: string,\n  importObject: any\n) => {\n  // Check if the browser supports streaming instantiation\n  if (WebAssembly.instantiateStreaming) {\n    // Fetch the module, and instantiate it as it is downloading\n    return WebAssembly.instantiateStreaming(\n      fetch(wasmModuleUrl),\n      importObject\n    );\n  } else {\n    // Fallback to using fetch to download the entire module\n    // And then instantiate the module\n    const wasmArrayBuffer = await fetch(wasmModuleUrl).then((response) =>\n      response.arrayBuffer()\n    );\n    return WebAssembly.instantiate(wasmArrayBuffer, importObject);\n  }\n};\n\nexport async function reset(\n  go: any,\n  wasm: WebAssembly.WebAssemblyInstantiatedSource\n) {\n  wasm.instance = await WebAssembly.instantiate(wasm.module, go.importObject); // reset instance\n}\n","import { useSudokuGame } from \"./context\";\nimport { wasmBrowserInstantiate } from \"../../utils/wasm\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { IBoard } from \"./types\";\n\nexport const SudokuWasmControls = () => {\n  const { setInitialBoard } = useSudokuGame();\n\n  useEffect(() => {\n    async function create() {\n      const board = await createBoard();\n      setInitialBoard(board);\n    }\n\n    create();\n  }, []);\n\n  return null;\n};\n\nexport const useSudokuWasmSolve = () => {\n  const { setBoard } = useSudokuGame();\n\n  const onSolve = useCallback(async () => {\n    const board = await solveBoard();\n    setBoard(board);\n  }, []);\n\n  return onSolve;\n};\n\nexport const useSudokuWasmVisualize = () => {\n  const { setBoard } = useSudokuGame();\n  const [playing, setPlaying] = useState(false);\n  const [paused, setPaused] = useState(false);\n  const visualizationMoves = useRef<any>(null);\n  const visualizationPaused = useRef<any>(null);\n  const visualizationStopped = useRef<any>(null);\n  const onPause = () => {\n    visualizationPaused.current = true;\n    setPlaying(false);\n    setPaused(true);\n  };\n  const onStop = () => {\n    visualizationStopped.current = true;\n    visualizationPaused.current = false;\n    visualizationMoves.current = null;\n    setPlaying(false);\n  };\n\n  const onVisualize = useCallback(async () => {\n    let moves: IBoard[] = []\n\n    setPaused(false);\n    visualizationStopped.current = false;\n    visualizationPaused.current = false;\n    if (visualizationMoves.current) {\n        moves = visualizationMoves.current;\n        visualizationMoves.current = null;\n    } else {\n        await visualizeBoard((board) => {\n          moves.push(board);\n        });\n    }\n    \n    function visualizeLoop() {\n      const move = moves.shift();\n      setBoard(move);\n      if (visualizationStopped.current) {\n        // Stop visualization do not save moves\n        visualizationStopped.current = false\n      } else if (visualizationPaused.current && moves.length) {\n        // Stop visualization and save moves\n        visualizationMoves.current = moves\n        visualizationPaused.current = false\n      } else if (moves.length) {\n        // Continue animation on next tick\n        window.requestAnimationFrame(visualizeLoop);\n      } else {\n        // Continue animation on next tick\n        setPlaying(false);\n      }\n    }\n\n    window.requestAnimationFrame(visualizeLoop);\n    setPlaying(true);\n  }, []);\n\n  return { onVisualize, playing, paused, onPause, onStop };\n};\n\nasync function init() {\n  if (!(window as any).create) {\n    const go = new (window as any).Go();\n    const wasm = await wasmBrowserInstantiate(\n      `${process.env.PUBLIC_URL}/lib.wasm`,\n      go.importObject\n    );\n    go.run(wasm.instance);\n  }\n}\n\nasync function createBoard() {\n  if (!(window as any).createBoard) await init();\n  const boardStr = (window as any).createBoard();\n  const board = JSON.parse(boardStr);\n  return board;\n}\n\nasync function solveBoard() {\n  await createBoard();\n  const boardStr = (window as any).solveBoard();\n  const board = JSON.parse(boardStr);\n  return board;\n}\n\nasync function visualizeBoard(fn: (board: IBoard) => void) {\n  await createBoard();\n  const boardStr = (window as any).visualizeBoard((str: string) => {\n    fn(JSON.parse(str));\n  });\n}\n","import Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Refresh from \"@material-ui/icons/Refresh\";\nimport Equalizer from \"@material-ui/icons/Equalizer\";\nimport PlayArrow from \"@material-ui/icons/PlayArrow\";\nimport Pause from \"@material-ui/icons/Pause\";\nimport React, { useState } from \"react\";\nimport { useSudokuGame } from \"../../providers/sudoku/context\";\nimport {\n  useSudokuWasmSolve,\n  useSudokuWasmVisualize,\n} from \"../../providers/sudoku/wasm\";\n\nexport const SudokuHeader = () => {\n  const { refresh } = useSudokuGame();\n  const [confirmRefresh, setConfirmRefresh] = useState(false);\n  const solveBoard = useSudokuWasmSolve();\n  const { onVisualize, playing, paused, onPause, onStop } = useSudokuWasmVisualize();\n  const onRefresh = () => {\n    onPause()\n    setConfirmRefresh(true)\n  };\n  const onConfirmRefresh = () => {\n    onStop();\n    refresh();\n    setConfirmRefresh(false);\n  }\n  const onCancelRefresh = () => {\n    setConfirmRefresh(false)\n    if (paused) {\n        onVisualize()\n    }\n  }\n  const onSolve = () => {\n    onStop();\n    window.requestAnimationFrame(() => {\n        solveBoard()\n    })\n  }\n  return (\n    <Box\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      px={2}\n      py={1}\n    >\n      <Typography variant=\"h5\">Sudoku</Typography>\n      <Box flexGrow={1} />\n      <Tooltip title=\"Visualization Backtracing\">\n        <IconButton size=\"small\" onClick={playing ? onPause : onVisualize} color={playing ? \"default\" : \"inherit\"}>\n          {playing ? <Pause /> : <PlayArrow />}\n        </IconButton>\n      </Tooltip>\n      <Tooltip title=\"Solve Board\">\n        <IconButton size=\"small\" onClick={onSolve}>\n          <Equalizer />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title=\"Reset Board\">\n        <IconButton size=\"small\" onClick={onRefresh}>\n          <Refresh />\n        </IconButton>\n      </Tooltip>\n      <Dialog open={confirmRefresh} onClose={onCancelRefresh}>\n        <DialogContent>\n          <DialogContentText>\n            Are you sure you would like to reset this game?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onCancelRefresh}>Cancel</Button>\n          <Button variant=\"contained\" color=\"primary\" onClick={onConfirmRefresh}>\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n","import { useEffect } from 'react'\nimport { useSudokuGame } from './context'\nimport { IRowCol, IMaybe } from './types'\n\nexport type KeyDownEvent = (ev: KeyboardEvent) => void;\n\nexport function handleKeypress(\n  handleKeyDown: KeyDownEvent,\n  handleKeyUp: KeyDownEvent\n) {\n  window.addEventListener(\"keydown\", handleKeyDown);\n  window.addEventListener(\"keyup\", handleKeyUp);\n\n  return () => {\n    window.removeEventListener(\"keydown\", handleKeyDown);\n    window.removeEventListener(\"keyup\", handleKeyUp);\n  };\n}\n\nexport const keys = {\n  Enter: 13,\n  Space: 32,\n  Left: 37,\n  Up: 38,\n  Right: 39,\n  Down: 40,\n};\n\nexport const SudokuKeyBoardControls = () => {\n  const { active, initialBoard, setActive } = useSudokuGame();\n  useEffect(() => {\n    const recurse = (\n      getNext: (v: IRowCol) => IRowCol,\n      curr: IMaybe<IRowCol>\n    ) => {\n      if (!curr) return;\n      if (!initialBoard) return;\n      const next = getNext(curr);\n      if (!next) return;\n      if (next.row < 0) return;\n      if (next.col < 0) return;\n      if (next.row > 8) return;\n      if (next.col > 8) return;\n      if (initialBoard[next.row][next.col]) {\n        recurse(getNext, next);\n      } else {\n        setActive(next);\n      }\n    };\n\n    return handleKeypress(\n      (ev) => {\n        const key = ev.which;\n        if (keys.Left === key)\n          recurse((curr) => ({ ...curr, col: curr.col - 1 }), active);\n        if (keys.Right === key)\n          recurse((curr) => ({ ...curr, col: curr.col + 1 }), active);\n        if (keys.Up === key)\n          recurse((curr) => ({ ...curr, row: curr.row - 1 }), active);\n        if (keys.Down === key)\n          recurse((curr) => ({ ...curr, row: curr.row + 1 }), active);\n      },\n      () => {}\n    );\n  }, [active, initialBoard]);\n\n  return null;\n};\n","import Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport {\n  SudokuFab,\n  SudokuNumBorder,\n  SudokuValueInput,\n} from \"./NubmerControl\";\nimport { useSudokuGame } from \"../../providers/sudoku/context\";\n\nconst SudokuBoard = () => {\n  const { initialBoard, board, setValue, active, setActive } = useSudokuGame();\n  return (\n    <Box>\n      {board?.map((rowValues, row) => (\n        <Box display=\"flex\" key={row}>\n          {rowValues.map((value, col) => (\n            <SudokuNumBorder row={row} col={col} key={`${row}_${col}`}>\n              {initialBoard?.[row][col] ? (\n                <SudokuFab disabled>\n                  <Typography color=\"textPrimary\">\n                    {initialBoard?.[row][col]}\n                  </Typography>\n                </SudokuFab>\n              ) : (\n                <SudokuValueInput\n                  value={value}\n                  active={active}\n                  position={{ row, col }}\n                  setValue={setValue}\n                  setActive={setActive}\n                />\n              )}\n            </SudokuNumBorder>\n          ))}\n        </Box>\n      ))}\n    </Box>\n  );\n};\n\nexport default SudokuBoard;\n","import React, { FC } from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n          main: 'rgba(49, 93, 138, 1)'\n        },\n        secondary: {\n          main: 'rgba(126, 172, 223, 1)'\n        }\n    }\n})\n\nexport const Root: FC = ({ children }) => {\n  return (\n    <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        { children }\n    </MuiThemeProvider>\n  );\n}\n\nexport default Root;\n","import Box from \"@material-ui/core/Box\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Divider from \"@material-ui/core/Divider\";\nimport React from \"react\";\nimport { NumberControls } from \"./components/Controls/NumberControls\";\nimport { SudokuHeader } from \"./components/Controls/SudokuHeader\";\nimport { SudokuGame } from \"./providers/sudoku/context\";\nimport { SudokuKeyBoardControls } from \"./providers/sudoku/keyboard\";\nimport { SudokuWasmControls } from \"./providers/sudoku/wasm\";\nimport Sudoku from \"./components/Controls/Sudoku\";\nimport Root from \"./components/Root\";\nimport Container from \"@material-ui/core/Container\";\n\nexport default () => {\n  return (\n    <Root>\n      <SudokuGame>\n        <Box p={2} display=\"flex\" justifyContent=\"center\">\n          <Container style={{ maxWidth: 740 }}>\n            <Card style={{ display: \"inline-block\", width: \"100%\" }}>\n              <SudokuHeader />\n              <Divider />\n              <CardContent>\n                <Box border={1} borderRadius={4}>\n                  <Sudoku />\n                </Box>\n              </CardContent>\n              <Divider />\n              <NumberControls />\n              <SudokuKeyBoardControls />\n              <SudokuWasmControls />\n            </Card>\n          </Container>\n        </Box>\n      </SudokuGame>\n    </Root>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}